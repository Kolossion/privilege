// Generated by CoffeeScript 1.10.0
(function() {
  var _validateContextFn, _validatePathMap, _validateRoleMap, assertFunction, contextToRoles, parse;

  contextToRoles = require('./defaults').contextToRoles;

  assertFunction = function(objName, fnName, arity, obj) {
    var err;
    err = (function() {
      switch (false) {
        case !!obj:
          return objName + " option is required";
        case (typeof obj[fnName]) === 'function':
          return objName + " option must have a '" + fnName + "' function";
        case obj[fnName].length === arity:
          return objName + "." + fnName + " must have an arity of " + arity;
        default:
          return null;
      }
    })();
    if (err) {
      throw new TypeError(err);
    } else {
      return obj;
    }
  };

  _validateRoleMap = assertFunction.bind(null, 'roleMap', 'check', 3);

  _validatePathMap = assertFunction.bind(null, 'pathMap', 'getToken', 1);

  _validateContextFn = function(fn) {
    if ((typeof fn) !== 'function') {
      throw new TypeError('contextToRoles option must be a function');
    }
    if (fn.length < 2) {
      throw new TypeError('contextToRoles must accept at least 2 arguments');
    }
    return fn;
  };

  parse = function(options) {
    var ctxToRoles, pathMap, roleMap;
    roleMap = _validateRoleMap(options.roleMap);
    pathMap = _validatePathMap(options.pathMap);
    ctxToRoles = _validateContextFn(options.contextToRoles ? options.contextToRoles : contextToRoles);
    return {
      contextToRoles: ctxToRoles,
      roleMap: roleMap,
      pathMap: pathMap
    };
  };

  module.exports = parse;

}).call(this);
